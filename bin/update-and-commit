#!/bin/bash

cd "$( dirname "$0" )"/..

echo Updating ...
make update

git add all-actions.txt

### Better 'Automatic commit of updated actions' commit messages
# Check for new actions
NEW_ACTIONS=($(git diff --staged | grep -e ^+.*$ | grep -v "+++" | tr -d '+' | cut -d':' -f1 | sort | uniq))
NEW_SERVICE=()
NEWS="FALSE"
if [[ -n "${NEW_ACTIONS[@]}" ]]; then # If there are new actions found
    echo "Found new actions: '${NEW_ACTIONS[@]}'"
	# Check for new services
	for SERVICE in "${NEW_ACTIONS[@]}"; do
		echo "Checking if the service '$SERVICE' is new..."
		if [[ ! $(git diff --staged | grep $SERVICE | grep -v +) ]]; then
			NEWS="TRUE"
			NEW_SERVICE+=$(echo "$SERVICE ")
			echo "New services: ${NEW_SERVICE[@]}"
		fi
	done
	if [[ "$NEWS" == "TRUE" ]]; then
		echo "Found new services"
		# New services commit message
		COMMIT_MESSAGE="New Services: '$(echo ${NEW_SERVICE[@]} | tr ' ' ',')'. Added actions to '$(echo ${NEW_ACTIONS[@]} | tr ' ' ',')'. "
	else
		COMMIT_MESSAGE="Added actions to '$(echo ${NEW_ACTIONS[@]} | tr ' ' ',')'. "
	fi
fi

# Check for removed actions
REMOVED_ACTIONS=($(git diff --staged | grep -e ^-.*$ | grep -v "\---" | tr -d '-' | cut -d':' -f1 | sort | uniq))
REMOVED_SERVICE=()
REMS="FALSE"
# Removed actions commit message
if [[ -n "${REMOVED_ACTIONS[@]}" ]];then
	echo "Found removed actions: '${REMOVED_ACTIONS[@]}'"
	# Check for removed services
	for SERVICE in "${REMOVED_ACTIONS[@]}"; do
		echo "Checking if the service '$SERVICE' is deprecated..."
		if [[ ! $(git diff --staged | grep $SERVICE | grep -v \-) ]]; then
			REMS="TRUE"
			REMOVED_SERVICE+=$(echo "$SERVICE ")
		fi
	done
	if [[ "$REMS" == "TRUE" ]]; then
		echo "Found deprecated services"
		# Removed services commit message
		COMMIT_MESSAGE+="Removed Services: '$(echo ${REMOVED_SERVICE[@]} | tr ' ' ',')'. Removed actions from '$(echo ${REMOVED_ACTIONS[@]} | tr ' ' ',')'. "
	else
		COMMIT_MESSAGE+="Removed actions from '$(echo ${REMOVED_ACTIONS[@]} | tr ' ' ',')'. "
	fi
fi

echo $COMMIT_MESSAGE

if [[ $(git status -s) ]]; then
    echo "Commit message should be: $COMMIT_MESSAGE"
	git commit -m "$(echo $COMMIT_MESSAGE)"
	git push -o ci-skip https://root:$TMP@$CI_SERVER_HOST/$CI_PROJECT_PATH.git HEAD:master
else
	echo "Nothing new to commit..."
fi
